{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\QuickNotes\\\\quicknotes\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CreateNote from './CreateNote';\nimport NoteList from './NoteList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendURL = \"https://quicknotes-production.up.railway.app\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchNotes = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${backendURL}/notes`);\n      setNotes(response.data);\n    } catch (err) {\n      setError('Failed to fetch notes');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const handleCreate = async newNote => {\n    try {\n      const response = await axios.post(`${backendURL}/notes`, newNote);\n      setNotes([...notes, response.data]);\n    } catch {\n      alert('Failed to create note');\n    }\n  };\n  const handleUpdate = async (id, updatedNote) => {\n    try {\n      await axios.put(`${backendURL}/notes/${id}`, updatedNote);\n      fetchNotes(); // Refresh notes\n    } catch {\n      alert('Failed to update note');\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`${backendURL}/notes/${id}`);\n      setNotes(notes.filter(note => note.id !== id));\n    } catch {\n      alert('Failed to delete note');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"QuickNotes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateNote, {\n      onCreate: handleCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading notes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n      notes: notes,\n      onUpdate: handleUpdate,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s2QjSaeCgwSQr37zGd0CJzlBaCs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","CreateNote","NoteList","jsxDEV","_jsxDEV","backendURL","App","_s","notes","setNotes","loading","setLoading","error","setError","fetchNotes","response","get","data","err","handleCreate","newNote","post","alert","handleUpdate","id","updatedNote","put","handleDelete","delete","filter","note","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","onUpdate","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/akash/QuickNotes/quicknotes/src/components/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport CreateNote from './CreateNote';\r\nimport NoteList from './NoteList';\r\n\r\nconst backendURL = \"https://quicknotes-production.up.railway.app\"; \r\n\r\nfunction App() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${backendURL}/notes`);\r\n      setNotes(response.data);\r\n    } catch (err) {\r\n      setError('Failed to fetch notes');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const handleCreate = async (newNote) => {\r\n    try {\r\n      const response = await axios.post(`${backendURL}/notes`, newNote);\r\n      setNotes([...notes, response.data]);\r\n    } catch {\r\n      alert('Failed to create note');\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (id, updatedNote) => {\r\n    try {\r\n      await axios.put(`${backendURL}/notes/${id}`, updatedNote);\r\n      fetchNotes(); // Refresh notes\r\n    } catch {\r\n      alert('Failed to update note');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`${backendURL}/notes/${id}`);\r\n      setNotes(notes.filter((note) => note.id !== id));\r\n    } catch {\r\n      alert('Failed to delete note');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-5\">\r\n      <h2 className=\"text-center mb-4\">QuickNotes</h2>\r\n      <CreateNote onCreate={handleCreate} />\r\n      {loading && <p>Loading notes...</p>}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      <NoteList\r\n        notes={notes}\r\n        onUpdate={handleUpdate}\r\n        onDelete={handleDelete}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}